// @generated
// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LastChainHeight {
    #[prost(string, tag = "1")]
    pub chain: ::prost::alloc::string::String,
    #[prost(int64, tag = "2")]
    pub height: i64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Mimir {
    #[prost(string, tag = "1")]
    pub key: ::prost::alloc::string::String,
    #[prost(int64, tag = "2")]
    pub value: i64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GenesisState {
    #[prost(message, repeated, tag = "1")]
    pub pools: ::prost::alloc::vec::Vec<super::types::Pool>,
    #[prost(message, repeated, tag = "2")]
    pub liquidity_providers: ::prost::alloc::vec::Vec<super::types::LiquidityProvider>,
    #[prost(message, repeated, tag = "3")]
    pub observed_tx_in_voters: ::prost::alloc::vec::Vec<super::types::ObservedTxVoter>,
    #[prost(message, repeated, tag = "4")]
    pub observed_tx_out_voters: ::prost::alloc::vec::Vec<super::types::ObservedTxVoter>,
    #[prost(message, repeated, tag = "5")]
    pub tx_outs: ::prost::alloc::vec::Vec<super::types::TxOut>,
    #[prost(message, repeated, tag = "6")]
    pub node_accounts: ::prost::alloc::vec::Vec<super::types::NodeAccount>,
    #[prost(message, repeated, tag = "7")]
    pub vaults: ::prost::alloc::vec::Vec<super::types::Vault>,
    #[prost(uint64, tag = "8")]
    pub reserve: u64,
    #[prost(int64, tag = "10")]
    pub last_signed_height: i64,
    #[prost(message, repeated, tag = "11")]
    pub last_chain_heights: ::prost::alloc::vec::Vec<LastChainHeight>,
    #[prost(message, repeated, tag = "12")]
    pub reserve_contributors: ::prost::alloc::vec::Vec<super::types::ReserveContributor>,
    #[prost(message, optional, tag = "13")]
    pub network: ::core::option::Option<super::types::Network>,
    #[prost(message, repeated, tag = "19")]
    pub orderbook_items: ::prost::alloc::vec::Vec<super::types::MsgSwap>,
    #[prost(message, repeated, tag = "20")]
    pub network_fees: ::prost::alloc::vec::Vec<super::types::NetworkFee>,
    #[prost(message, repeated, tag = "22")]
    pub chain_contracts: ::prost::alloc::vec::Vec<super::types::ChainContract>,
    #[prost(message, repeated, tag = "23")]
    pub thor_names: ::prost::alloc::vec::Vec<super::types::ThorName>,
    #[prost(message, repeated, tag = "24")]
    pub mimirs: ::prost::alloc::vec::Vec<Mimir>,
    #[prost(int64, tag = "25")]
    pub store_version: i64,
    #[prost(message, repeated, tag = "26")]
    pub bond_providers: ::prost::alloc::vec::Vec<super::types::BondProviders>,
    #[prost(message, optional, tag = "27")]
    pub pol: ::core::option::Option<super::types::ProtocolOwnedLiquidity>,
    #[prost(message, repeated, tag = "28")]
    pub loans: ::prost::alloc::vec::Vec<super::types::Loan>,
    #[prost(message, repeated, tag = "29")]
    pub streaming_swaps: ::prost::alloc::vec::Vec<super::types::StreamingSwap>,
    #[prost(message, repeated, tag = "30")]
    pub swap_queue_items: ::prost::alloc::vec::Vec<super::types::MsgSwap>,
    #[prost(message, repeated, tag = "31")]
    pub swapper_clout: ::prost::alloc::vec::Vec<super::types::SwapperClout>,
    #[prost(message, repeated, tag = "32")]
    pub trade_accounts: ::prost::alloc::vec::Vec<super::types::TradeAccount>,
    #[prost(message, repeated, tag = "33")]
    pub trade_units: ::prost::alloc::vec::Vec<super::types::TradeUnit>,
    #[prost(message, repeated, tag = "34")]
    pub outbound_fee_withheld_rune: ::prost::alloc::vec::Vec<super::common::Coin>,
    #[prost(message, repeated, tag = "35")]
    pub outbound_fee_spent_rune: ::prost::alloc::vec::Vec<super::common::Coin>,
    #[prost(message, repeated, tag = "36")]
    pub rune_providers: ::prost::alloc::vec::Vec<super::types::RuneProvider>,
    #[prost(message, optional, tag = "37")]
    pub rune_pool: ::core::option::Option<super::types::RunePool>,
    #[prost(message, repeated, tag = "38")]
    pub node_mimirs: ::prost::alloc::vec::Vec<super::types::NodeMimir>,
    #[prost(message, repeated, tag = "39")]
    pub affiliate_collectors: ::prost::alloc::vec::Vec<super::types::AffiliateFeeCollector>,
    #[prost(message, repeated, tag = "40")]
    pub loan_total_collateral: ::prost::alloc::vec::Vec<super::common::Coin>,
    #[prost(message, repeated, tag = "41")]
    pub secured_assets: ::prost::alloc::vec::Vec<super::types::SecuredAsset>,
}
// @@protoc_insertion_point(module)
