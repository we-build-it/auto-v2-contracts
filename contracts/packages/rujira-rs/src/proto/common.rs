// @generated
// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Asset {
    #[prost(string, tag = "1")]
    pub chain: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub symbol: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub ticker: ::prost::alloc::string::String,
    #[prost(bool, tag = "4")]
    pub synth: bool,
    #[prost(bool, tag = "5")]
    pub trade: bool,
    #[prost(bool, tag = "6")]
    pub secured: bool,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Coin {
    #[prost(message, optional, tag = "1")]
    pub asset: ::core::option::Option<Asset>,
    #[prost(string, tag = "2")]
    pub amount: ::prost::alloc::string::String,
    #[prost(int64, tag = "3")]
    pub decimals: i64,
}
/// PubKeySet contains two pub keys , secp256k1 and ed25519
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct PubKeySet {
    #[prost(string, tag = "1")]
    pub secp256k1: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub ed25519: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Tx {
    #[prost(string, tag = "1")]
    pub id: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub chain: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub from_address: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub to_address: ::prost::alloc::string::String,
    #[prost(message, repeated, tag = "5")]
    pub coins: ::prost::alloc::vec::Vec<Coin>,
    #[prost(message, repeated, tag = "6")]
    pub gas: ::prost::alloc::vec::Vec<Coin>,
    #[prost(string, tag = "7")]
    pub memo: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Fee {
    #[prost(message, repeated, tag = "1")]
    pub coins: ::prost::alloc::vec::Vec<Coin>,
    #[prost(string, tag = "2")]
    pub pool_deduct: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ProtoUint {
    #[prost(string, tag = "1")]
    pub value: ::prost::alloc::string::String,
}
// @@protoc_insertion_point(module)
